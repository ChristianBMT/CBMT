import { google, docs_v1 } from "googleapis";
import { NextResponse } from "next/server";
import { GoogleSpreadsheet } from "google-spreadsheet";
import { JWT } from "google-auth-library";

type GooglePageParams = {
  params: {
    googleDocsID: string;
  };
};

export async function GET(req: Request, { params }: GooglePageParams) {
  try {
    const serviceAccountAuth = new JWT({
      // env var values here are copied from service account credentials generated by google
      // see "Authentication" section in docs for more info
      email: process.env.GOOGLE_SERVICE_EMAIL,
      key: process.env.GOOGLE_SERVICE_PRIVATE_KEY,
      scopes: [
        "https://www.googleapis.com/auth/drive",
        "https://www.googleapis.com/auth/documents",
        "https://www.googleapis.com/auth/drive.file",
        "https://www.googleapis.com/auth/spreadsheets",
      ],
    });

    const docsClient: docs_v1.Docs = google.docs({
      version: "v1",
      auth: serviceAccountAuth,
    });

    const response = await docsClient.documents.get({
      documentId: params.googleDocsID,
    });

    const docsBody = response.data.body?.content || [];

    let outputString = "";

    console.log(docsBody);

    for (let body of docsBody) {
      for (let elements of body.table?.tableRows || []) {
        // outputString += elements.textRun?.content;
        for (let cell of elements.tableCells || []) {
          for (let e of cell.content || []) {
            for (let para of e.paragraph?.elements || []) {
              console.log(para.textRun?.content);
            }
          }
        }
      }
    }

    // console.log(outputString);

    // const doc = new GoogleSpreadsheet(
    //   process.env.GOOGLE_SHEETS_ID || "",
    //   serviceAccountAuth
    // );

    // await doc.loadInfo();
    // let sheet = doc.sheetsByTitle["Devotions"];
    // console.log(sheet);

    // let rows = await sheet.getRows();
    // console.log(rows);

    // const auth = await google.auth.getClient({
    //   scopes: [
    //     "https://www.googleapis.com/auth/drive",
    //     "https://www.googleapis.com/auth/documents",
    //     "https://www.googleapis.com/auth/drive.file",
    //   ],
    // });
    // console.log(auth);
    // const docs = google.docs({ version: "v1", auth });

    // // const file = await fs.readFile("./CBMT_credentials.json", "utf8");

    // const auth = new google.auth.GoogleAuth({
    //   keyFile: "C:/Users/Soh Hong Yu/Downloads/christbmt-f21491257163.json",
    //   scopes: [
    //     "https://www.googleapis.com/auth/drive",
    //     "https://www.googleapis.com/auth/documents",
    //     "https://www.googleapis.com/auth/drive.file",
    //   ],
    // });

    // const docsClient: docs_v1.Docs = google.docs({
    //   version: "v1",
    //   auth: auth,
    // });
    // const response = await docsClient.documents.get({
    //   documentId: params.googleDocsID,
    // });
    // console.log(response);

    // const oAuth2Client = new google.auth.OAuth2(
    //   process.env.GOOGLE_CLIENT_ID,
    //   process.env.GOOGLE_CLIENT_SECRET,
    //   process.env.NEXT_PUBLIC_SERVER_URL || "http://localhost:3000"
    // );
    // console.log(oAuth2Client);
    // try {
    //   const auth = await google.auth.getClient({
    //     scopes: [
    //       "https://www.googleapis.com/auth/documents",
    //       "https://www.googleapis.com/auth/documents.readonly",
    //       "https://www.googleapis.com/auth/drive",
    //       "https://www.googleapis.com/auth/drive.file",
    //       "https://www.googleapis.com/auth/drive.readonly",
    //     ],
    //   });
    //   const docsClient: docs_v1.Docs = google.docs({
    //     version: "v1",
    //     auth: auth,
    //   });
    //   const response = await docsClient.documents.get({
    //     documentId: params.googleDocsID,
    //   });
    //   console.log(response);
    // } catch (err) {
    //   console.log(err);
    // }
    // const docsClient: docs_v1.Docs = google.docs({
    //   version: "v1",
    //   auth: oAuth2Client,
    // });
    // const response = await docsClient.documents.get({
    //   documentId: params.googleDocsID,
    // });
    // console.log(response.data);
    // console.log(
    //   await docsClient.documents.get()
    // https://docs.googleapis.com/v1/documents/{documentId}
    // );
    return NextResponse.json({ message: outputString });
  } catch (error) {
    console.log(error);
    return new NextResponse("Internal Server Error", { status: 500 });
  }
}
